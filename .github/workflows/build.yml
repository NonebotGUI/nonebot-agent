# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish

on:
  push:
    branches:
      - main

jobs:
  windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1

      - name: Compile
        run: |
          mkdir dist
          dart pub get
          dart compile exe bin/nonebot_flutter_webui_agent.dart -o dist\agent-windows.exe

      - name: Upload Dist Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows Artifact(Dist)
          path: dist

  linux:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            submodules: true
        - name: Setup Dart
          uses: dart-lang/setup-dart@v1
  
        - name: Compile
          run: |
            mkdir dist
            dart pub get
            dart compile exe bin/nonebot_flutter_webui_agent.dart -o dist/agent-linux
  
        - name: Upload Dist Artifact
          uses: actions/upload-artifact@v4
          with:
            name: Linux Artifact(Dist)
            path: dist

  macos:
    runs-on: macos-latest

    steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            submodules: true
        - name: Setup Dart
          uses: dart-lang/setup-dart@v1
  
        - name: Compile
          run: |
            mkdir dist
            dart pub get
            dart compile exe bin/nonebot_flutter_webui_agent.dart -o dist/agent-macos
  
        - name: Upload Dist Artifact
          uses: actions/upload-artifact@v4
          with:
            name: MacOS Artifact(Dist)
            path: dist


  publish_releases:
    name: publish
    runs-on: ubuntu-latest
    needs:
      - windows
      - linux
      - macos

    strategy:
      matrix:
        os: [Windows, Linux, MacOS]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Fetch Version
        run: |
          sudo snap install yq
          nbgui_version=$(yq eval '.version' pubspec.yaml)
          echo "NBGUI_VERSION=$nbgui_version" >> $GITHUB_ENV

      - name: Download Self_-host Artifact
        uses: actions/download-artifact@v4
        with:
          name: "${{ matrix.os }} Artifact(Dist)"
          path: dist/

      - name: Download Dashboard Artifact
        uses: actions/download-artifact@v4
        with:
          name: "Dashboard"
          path: dist/

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.NBGUI_VERSION }}
          body_path: RELEASE_CHANGELOG.md
          prerelease: false
          draft: false
          generate_release_notes: true
          token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          files: |
            dist/agent-windows.exe
            dist/agent-linux
            dist/agent-macos
            dist/dashboard.zip


